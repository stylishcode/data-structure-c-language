/*
INSERÇÃO NO INICIO: A CADA NOVA INSERÇÃO, O PRIMEIRO ELEMENTO DEVERÁ APONTAR COMO ANTERIOR PARA O NOVO ELEMENTO INSERIDO E O NOVO ELEMENTO DEVERÁ APONTAR COMO PRÓXIMO PARA O PRIMEIRO ELEMENTO E O NOVO ELEMENTO DEVE SER DEFINIDO COMO PRIMEIRO DA LISTA.
    - CRIAR NÓ E ALOCAR MEMÓRIA
    - (OPCIONAL) VERIFICAR SE ALOCAÇÃO TEVE SUCESSO
    - NOVO NÓ RECEBE VALOR
    - NOVO ANTERIOR E NOVO PROXIMO RECEBEM NULL;
    - SE A LISTA ESTIVER VAZIA (NULL), PRIMEIRO DA LISTA RECEBE NOVO NÓ
    - SENÃO, ANTERIOR DE PRIMEIRO DA LISTA APONTA PARA O NOVO NÓ
    - PROXIMO DE NOVO APONTA PARA O PRIMEIRO DA LISTA
    - NOVO NÓ RECEBE PRIMEIRO DA LISTA (PASSA A SER O PRIMEIRO)
*/

/*
INSERÇÃO NO FINAL DA LISTA: A CADA NOVA INSERÇÃO, O ÚLTIMO ELEMENTO DEVERÁ APONTAR COMO PRÓXIMO PARA O NOVO ELEMENTO INSERIDO E O NOVO ELEMENTO DEVERÁ APONTAR COMO ANTERIOR PARA O PRIMEIRO ELEMENTO E O NOVO ELEMENTO DEVE SER DEFINIDO COMO O ÚLTIMO DA LISTA.
    - CRIAR NÓ E ALOCAR MEMÓRIA
    - (OPCIONAL) VERIFICAR SE ALOCAÇÃO TEVE SUCESSO
    - NOVO NÓ RECEBE VALOR
    - NOVO ANTERIOR E NOVO PROXIMO RECEBEM NULL;
    - SE A LISTA ESTIVER VAZIA (NULL), PRIMEIRO DA LISTA RECEBE NOVO NÓ
    - SENÃO, PROXIMO DE ULTIMO APONTA PARA O NOVO NÓ
    - ANTERIOR DO NOVO NÓ APONTA PARA O ÚLTIMO
    - NOVO NÓ RECEBE ULTIMO DA LISTA (PASSA A SER O ÚLTIMO)
*/

/*
REMOÇÃO NO INICIO DA LISTA: A REMOÇÃO DO INÍCIO DA LISTA TEM COMO FINALIDADE GARANTIR QUE O SEGUNDO ELEMENTO, CASO EXISTA, SEJA DEFINIDO COMO O NOVO INÍCIO DA LISTA. NA REMOÇÃO DO PRIMEIRO ELEMENTO, O NOVO PRIMEIRO ELEMENTO SERÁ O PRÓXIMO ELEMENTO APONTADO PELO PRIMEIRO ELEMENTO, DEPOIS O ELEMENTO SERÁ REMOVIDO E EM SEGUIDA O NOVO PRIMEIRO ELEMENTO DEVERÁ MUDAR O APONTADOR ANTERIOR PARA NULL. POR FIM, O SEGUNDO ELEMENTO DA LISTA SERÁ REFERENCIADO PELO DESCRITOR PRIMEIRO.
/*

/*
REMOÇÃO DO FINAL DA LISTA: A REMOÇÃO DO FINAL DA LISTA TEM COMO FINALIDADE GARANTIR QUE O PENÚLTIMO ELEMENTO, CASO EXISTE, SEJA DEFINIDO COMO O NOVO FINAL DA LISTA. NA REMOÇÃO DO ÚLTIMO ELEMENTO, O NOVO ÚLTIMO ELEMENTO SERÁ O ELEMENTO ANTERIOR APONTADO PELO ÚLTIMO ELEMENTO, DEPOIS O ÚLTIMO ELEMENTO SERÁ REMOVIDO, E, EM SEGUIDA, O NOVO ÚLTIMO ELEMENTO DEVERÁ MUDAR O APONTADOR PRÓXIMO PARA NULL. POR FIM, O PENÚLTIMO ELEMENTO DA LISTA SERÁ REFERENCIADO PELO DESCRITOR ÚLTIMO.
    - VERIFICAR SE A LISTA ESTÁ VAZIA
    - SE NÃO ESTIVER, SE PROXIMO DE LISTA PRIMEIRO FOR NULL 
    - CRIAR NO AUX QUE RECEBE ULTIMO DA LISTA
    - PRIMEIRO DA LISTA E ULTIMO DA LISTA RECEBEM NULL E AUX É LIBERADO
    - SENAO, CRIAR NO AUX QUE RECEBE ULTIMO DA LISTA
    - CRIAR NÓ QUE RECEBE O PROXIMO DO PENULTIMO DA LISTA ((LISTA->ULTIMO)->ANTERIOR)->PROXIMO RECEBE NULL 
    - ULTIMO DA LISTA RECEBE PENULTIMO DA LISTA (LISTA->ULTIMO->ANTERIOR)
    - LIBERAR AUX
*/

/*
BUSCA NA LISTA: A PESQUISA POR UM VALOR NA LISTA DUPLAMENTE ENCADEADA SEGUE AS MESMAS REGRAS DA LISTA SIMPLESMENTE ENCADEADA, PORÉM, O SENTIDO DA BUSCA PODE SER DO ÚLTIMO PARA O PRIMEIRO ELEMENTO, UTILIZANDO O PONTEIRO ANTERIOR PARA PERCORRER A LISTA OU O SENTIDO DO PRIMEIRO PARA O ÚLTIMO, UTILIZANDO O PONTEIRO PRÓXIMO PARA PERCORRER A LISTA:
*/

/*
INSERÇÃO ENTRE DOIS ELEMENTOS: O NOVO ELEMENTO SERÁ INSERIDO ENTRE DOIS ELEMENTOS, O ELEMENTO SEGUINTE AO ELEMENTO QUE SERÁ INSERIDO É A REFERÊNCIA PARA A INSERÇÃO. O NOVO ELEMENTO SERÁ O ANTERIOR DESSA REFERÊNCIA, ASSIM, O ELEMENTO ANTERIOR DA REFERÊNCIA PODE APONTAR COMO PRÓXIMO PARA O NOVO ELEMENTO. DESSA FORMA O ELEMENTO ANTERIOR APONTARÁ COMO PRÓXIMO PARA O NOVO ELEMENTO, O NOVO ELEMENTO DEVERÁ APONTAR COMO ANTERIOR PARA O ANTERIOR DA REFERÊNCIA, O NOVO ELEMENTO TERÁ COMO PRÓXIMO A PRÓPRIA REFERÊNCIA, ASSIM, O ELEMENTO APONTARÁ PARA O ELEMENTO SEGUINTE, POR FIM, O ELEMENTO SEGUINTE TERÁ COMO ANTERIOR O NOVO ELEMENTO INSERIDO.
*/

/*
REMOÇAO DO ELEMENTO ENTRE DOIS ELEMENTOS: A REMOÇÃO DE UM ELEMENTO QUE ESTÁ ENTRE DOIS OUTROS ELEMENTOS UTILIZA OS PONTEIROS ANTERIOR E PRÓXIMO DO ELEMENTO QUE SERÁ REMOVIDO, FACILITANDO A OPERAÇÃO. PORTANTO, O ELEMENTO ANTERIOR AO QUE SERÁ EXCLUIDO DEVERÁ APONTAR COMO PRÓXIMO PARA O ELEMENTO POSTERIOR AO ELEMENTO QUE SERÁ EXCLUIDO, O ELEMENTO POSTERIOR APONTARÁ COMO ANTERIOR PARA O ELEMENTO ANTERIOR AO QUE SERÁ EXCLUIDO E APÓS ESSES REFERENCIAMENTOS, O ELEMENTO SERÁ EXCLUIDO.
*/




