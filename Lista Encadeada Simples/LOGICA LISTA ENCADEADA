/*
INICIAR LISTA:
    - FAZER O INICIO APONTAR PARA NULO (COM PONTEIRO)
*/
/*
INSERIR INICIO:
     - CRIAR NOVA ESTRUTURA DO TIPO NÓ
     - ALOCAR MEMÓRIA PARA ESSA ESTRUTURA NÓ USANDO MALLOC
     - VERIFICAR SE HÁ ESPAÇO, SENÃO, SAIR DO PROGRAMA
     - NOVA ESTRUTURA NÓ RECEBE O VALOR QUE SE QUER INSERIR
     - PROXIMO DA NOVA ESTRUTURA RECEBE O INICIO DA LISTA
     - INICIO DA LISTA RECEBE NOVA ESTRUTURA NÓ
*/
/*
INSERIR FINAL:
    - CRIAR NOVA ESTRUTURA DO TIPO NÓ
    - ALOCAR MEMORIA PARA ESSA ESTRUTURA (NÓ) USANDO MALLOC
    - VERIFICAR SE HA ESPAÇO, SENÃO, SAIR DO PROGRAMA
    - ESTRUTURA (NÓ) RECEBE O VALOR QUE SE QUER INSERIR
    - PROXIMO DA NOVA ESTRUTURA APONTA PARA O FINAL DA LISTA (NULL), SIGNIFICA QUE NÃO TEM NINGUÉM DEPOIS DESSE NOVO NÓ
    - SE A LISTA ESTIVER VAZIA, O NOVO VALOR SERÁ INSERIDO NO INICIO DA LISTA SENÃO SERÁ NECESSÁRIO PERCORRER
    - COMO PERCORRER A LISTA PARA INSERÇÃO?
        - ESTRUTURA (NÓ) AUX = INICIO ->INDICE COMEÇA NO INICIO DA LISTA E VAI ATE O QUE SE A ESTRUTURA (NÓ) -> PROXIMO = NULL, É O FIM DA LISTA
        ENQUANTO (AUX->PROXIMO <> FIM) FAÇA
            AUX = AUX->PROXIMO
        FIM ENQUANTO
    - AO CHEGAR NO ELEMENTO CUJO PROXIMO APONTA PRA NULL, PROXIMO DESSE ELEMENTO PASSA A APONTAR PARA O NOVO ELEMENTO
    - NOVO ELEMENTO PASSA A APONTAR PARA NULL
*/
/*
RETIRAR INICIO:
    - VERIFICAR SE ESTÁ VAZIA, SE SIM, NÃO TEM O QUE RETIRAR, SAIR DO PROGRAMA
    - SENAO CRIAR ESTRUTURA (NÓ) AUX QUE RECEBE COMO INDICE O INICIO DA LISTA
    - VARIAVEL ELEMENTO QUE SE DESEJA RETIRAR RECEBE O CAMPO ELEMENTO DE AUX (EX: INT ELEMENTO = AUX->ELEMENTO)
    - INICIO DA LISTA RECEBE CAMPO PROXIMO DE AUX (APONTA PRO CAMPO PROXIMO QUE O AUX ESTAVA APONTANDO PARA PODER LIBERAR O AUX)
    - LIBERAR AUX 
    - AUX RECEBE NULL OU SEJA, LIBERA O ESPAÇO DE MEMÓRIA QUE TINHA DO AUX
    - RETORNAR ELEMENTO REMOVIDO
*/
/*
RETIRAR FIM:
    - VERIFICAR SE ESTÁ VAZIA, SE SIM, NÃO TEM O QUE RETIRAR, SAIR DO PROGRAMA
    - SENAO CRIAR UMA ESTRUTURA TIPO NÓ AUX E OUTRA "ANTERIOR" QUE RECEBERA O PROXIMO DE AUX
    - AUX RECEBE INICIO DA LISTA COMO INDICE
    - ENQUANTO O PROXIMO DE AUX NÃO FOR NULL ANTERIOR RECEBE O PROXIMO DE AUX
    - AUX RECEBE O PROXIMO DELE (AUX->PROXIMO)
*/
/*
LISTAR: 
    - SE INICIO APONTAR PARA NULL, NÃO TEM O QUE MOSTRAR, SAIR DO PROGRAMA
    - CRIAR ESTRUTURA TIPO NO AUX QUE RECEBE INICIO DA LISTA
    - ENQUANTO AUX NÃO FOR NULL, MOSTRAR ELEMENTO DE AUX
    - AUX RECEBE PROXIMO DE AUX
*/
